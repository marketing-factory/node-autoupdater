name: Deploy
on:
  workflow_dispatch:
    inputs:
      release_type:
        description: Release type (patch / minor / major)
        required: false
        default: patch
      release_notes:
        description: Human-readable description of changes introduced by this release.
        required: false
      include_commit_messages:
        description: Include commit messages since last release? (true / false)
        required: false
        default: "true"

env:
  IMAGE_REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: 'npm'
      - name: Bump version
        run: npm version ${{ github.event.inputs.release_type }}
      - run: npm ci
      - run: npm run build
      - run: npm test
      - name: Pack tarball
        run: |
          tarball_name=$(npm pack -s)
          mv $tarball_name most-recent-tarball.tgz
      - name: Upload tarball
        uses: actions/upload-artifact@v2
        with:
          name: tarball
          path: most-recent-tarball.tgz
          retention-days: 1

  test-image:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Download tarball
        uses: actions/download-artifact@v2
        with:
          name: tarball
      - name: Build image
        id: build-image
        uses: docker/build-push-action@v2
        with:
          context: .
      - name: Test image
        run: |
          echo '{"gitlab_project_name": "SAMERkab/example", "target_branch": "main"}' >> .autoupdater.yaml
          docker run --cap-add=SYS_ADMIN -v "$(pwd)":/app:ro ${{ steps.build-image.outputs.digest }}

  bump-version:
    runs-on: ubuntu-latest
    needs: test-image
    outputs:
      new-version: ${{ steps.bump.outputs.new-version }}
    steps:
      - name: Bump version
        id: bump
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          echo "::set-output name=new-version::$(npm version ${{ github.event.inputs.release_type }})"
          git push --follow-tags

  push-image:
    runs-on: ubuntu-latest
    needs: bump-version
    steps:
      - uses: actions/checkout@v2
      - name: Download tarball
        uses: actions/download-artifact@v2
        with:
          name: tarball
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Log in to the container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ needs.bump-version.outputs.new-version }},
            ${{ env.IMAGE_REGISTRY }}/${{ env.IMAGE_NAME }}:latest

  publish-to-npm:
    runs-on: ubuntu-latest
    needs: bump-version
    steps:
      - name: Use Node.js 14
        uses: actions/setup-node@v2
        with:
          node-version: 14
          registry-url: 'https://registry.npmjs.org'
      - name: Download tarball
        uses: actions/download-artifact@v2
        with:
          name: tarball
      - name: Publish
        run: npm publish most-recent-tarball.tgz
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

  github-release:
    runs-on: ubuntu-latest
    needs: bump-version
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Generate release notes
        run: |
          echo ${{ github.event.inputs.release_notes }} >> release-notes.md
          if [[ ${{ github.event.inputs.include_commit_messages }} == true ]]; then
            chmod +x .github/generate-release-notes.sh;
            .github/generate-release-notes.sh release-notes.md;
          fi
      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          body_path: release-notes.md
          tag_name: ${{ needs.bump-version.outputs.new-version }}