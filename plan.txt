
App:
    async start(): Promise<void>



Logger:
    log(text: string): void

GitClient(logger: Logger):
    - logger: Logger
        Used for outputting log messages (e.g. to console)
    - updateMessages: string[]
    - async authenticate(username: string, passwordOrToken: string): bool
    - async createOrOverrideBranch(branchName: string): Promise<void>
        Delete branch 'branchName' if exists and create a new branch with that name.
    - async createOrUpdateMergeRequest(): Promise<void>

PackageUpdater:
    - commands: Record<string, string>

    - determineUsedPackageManager(): PackageManger
    - makeCommands(usedPackageManager: PackageManager): Record<string, string>
    - async outdatedPackagesExist(): Promise<bool>
    - updatePackages(): Promise<void>

ConfigurationManager:
    configLocations: string[]
    config: ConfigObject

    loadConfigurationFromFiles(): void
    getConfig(key: string): typeof configObject[string]